#!/bin/bash

#======================================================
# git
#======================================================

export GIT_BRANCH
export PREVPWD

f_checkgit() {
  if [ "$PWD" != "$PREVPWD" ]; then
    GIT_BRANCH=`__git_ps1`
    PREVPWD="$PWD"
  fi
}

f_checkgit_force() {
  PREVPWD=""
  f_checkgit
}

f_git_ps1() {
  echo "$GIT_BRANCH"
}

f_set_git_env() {
  GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"
  COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"
  COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"
  COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"

  if [ -x /usr/bin/cygpath ]; then
    GIT_EXEC_PATH=`cygpath -u "$GIT_EXEC_PATH"`
    COMPLETION_PATH=`cygpath -u "$COMPLETION_PATH"`
  fi

  echo "export GIT_EXEC_PATH=\"$GIT_EXEC_PATH\""
  echo "export COMPLETION_PATH=\"$COMPLETION_PATH\""
}

f_set_git_prompt() {
  PROMPT_COMMAND='echo -ne "\033]0;${USERNAME}@${HOSTNAME}: ${PWD}\007";f_checkgit'

  if [ -z "$COMPLETION_PATH" ]; then
    echo "call f_set_git_env"
    f_set_git_env >> $BASHRC_CACHED
  fi

  if [ -f "$COMPLETION_PATH/git-prompt.sh" ]; then
    #source "$COMPLETION_PATH/git-completion.bash"
    source "$COMPLETION_PATH/git-prompt.sh"
    #GIT_BRANCH_FUNC='`__git_ps1`'
    GIT_BRANCH_FUNC='`f_git_ps1`'
  fi

  export PROMPT_DIRTRIM=2
  export PS1="$ECOR$ECO2${MY_SHELL_NAME}$ECOD$ECO3[\w]$ECO6${GIT_BRANCH_FUNC}$ECOD\$ "
}

gb() {
  git remote -v
  echo "[BRANCH]"
  git branch -a -vv
  echo "[TAG]"
  git tag
  git ls-remote --tags
}

# less options
# -E or --QUIT-AT-EOF
# -F or --quit-if-one-screen
# -R or --RAW-CONTROL-CHARS
# -S or --chop-long-lines
# -X or --no-init
gg()   { git graph --color=always $* | less -EFRSX; }
gg-d() { git graph --color=always --date-order  $* | less -EFRSX; }
gg-s() { git graph --color=always --name-status $* | less -EFRSX; }

alias gs='git status'
alias gf='git fetch'
alias gu='f_checkgit_force'

alias gR='git reset --hard'
alias gRom='git reset --hard origin/master'
alias gPom='git push origin master'

alias git-pull-no-commit='git pull --no-commit'
alias git-merge-no-commit='git merge --no-commit'

alias gA='git add'
alias gAu='git add -u'
alias gC='git commit -m'

alias git-add-chmod-x='git update-index --add --chmod=+x'
alias git-ls-filemode='git ls-files -s'

alias git-stage='git add'
alias git-unstage='git reset --'

alias git-track='git add'
alias git-untrack-file='git rm --cached'
alias git-untrack-dir='git rm --cached -r'

alias git-submodule-update-all='git submodule update --init --recursive'
alias git-dirdiff='git difftool --dir-diff'

alias G='gg -15'
alias GG='vim -c "Agit"'
alias S='vim -c "Gstatus"'

