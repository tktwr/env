#======================================================
# snippets for python
#======================================================

snippet imp "import"
import ${0:module}
endsnippet

snippet main "main"
import sys


def main(argv):
    print(argv)


if __name__ == "__main__":
    main(sys.argv)
endsnippet

snippet print "print"
print(f"${1:val}: {$1}")
endsnippet

snippet printf "printf"
print("${1:val}: {}".format($1))
endsnippet

snippet range "range"
range(${1:0}, ${2:5}, ${3:1})
endsnippet

snippet int-list "int list"
list(int(i) for i in range(${1:0}, ${2:5}, ${3:1}))
endsnippet

#------------------------------------------------------
# control
#------------------------------------------------------

snippet if "if"
if ${1:True}:
    ${0:pass}
endsnippet

snippet elif "elif"
elif ${1:True}:
    ${0:pass}
endsnippet

snippet else "else"
else:
    ${0:pass}
endsnippet

snippet wh "while"
while ${1:True}:
    ${0:pass}
endsnippet

snippet for "for"
for ${1:i} in ${2:list}:
    ${0:pass}
endsnippet

#------------------------------------------------------
# function
#------------------------------------------------------

snippet def "def"
def ${1:function}(${2:arg1}):
    ${0:pass}


endsnippet

#------------------------------------------------------
# class
#------------------------------------------------------

snippet cl "class"
class MyClass():
    n = 0

    def __init__(self, x):
        MyClass.n += 1
        self.x = x

    def add(self, x):
        self.x += x
        return self.x

    @classmethod
    def f(self, text):
        print(text)


endsnippet

snippet subcl "sub class"
class MySubClass(MyClass):
    def g(self):
        return self.x


endsnippet

#------------------------------------------------------
# io
#------------------------------------------------------

snippet f_read_text "read a text file"
def f_read_text(fname):
    with open(fname, "r") as f:
        lines = f.readlines()
    return lines


endsnippet

snippet f_write_text "write a text file"
def f_write_text(fname, lines):
    with open(fname, "w") as f:
        for i in lines:
            f.write(i)


endsnippet

snippet f_read_json "read a json file"
import json

def f_read_json(fname):
    with open(fname, "r") as f:
        json_data = json.load(f)
    return json_data


endsnippet

snippet f_write_json "write a json file"
import json

def f_write_json(fname, data):
    with open(fname, "w") as f:
        f.write(json.dumps(data))


endsnippet

